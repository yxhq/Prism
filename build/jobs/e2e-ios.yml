parameters:
  buildConfiguration: 'Debug'
  versionName: ''

jobs:
- job: e2eIOS
  displayName: E2E iOS App
  pool:
    vmImage: $(MacImage)
    demands:
    - MSBuild
  workspace:
    clean: all
  steps:
  - task: InstallAppleCertificate@2
    displayName: 'Install an Apple certificate'
    inputs:
      certSecureFile: Prism.p12
      certPwd: $(PrismAppleCertPassword)

  - task: InstallAppleProvisioningProfile@1
    displayName: 'Install an Apple provisioning profile'
    inputs:
      provProfileSecureFile: Prism.mobileprovision

  - task: ios-bundle-version@1
    displayName: 'Bump iOS Versions in Info.plist'
    inputs:
      sourcePath: e2e/Forms/src/HelloWorld.iOS/Info.plist
      versionCodeOption: 'buildid'
      versionCode: '$(Build.BuildId)'
      versionName: ${{ parameters.versionName }}
      printFile: true

  - template: ../steps/set-runtime.yml

  - template: ../steps/prepare-build.yml
    parameters:
      solution: e2e/Forms/HelloWorld.sln

  - task: XamariniOS@2
    displayName: 'Build Xamarin.iOS solution HelloWorld.iOS.csproj'
    inputs:
      solutionFile: 'e2e/Forms/src/HelloWorld.iOS/HelloWorld.iOS.csproj'
      configuration: ${{ parameters.buildConfiguration }}

  - bash: |
     echo "Copying files to ${stagingDir}"
     rm -rf $stagingDir/Debug
     cp HelloWorld.iOS.ipa $stagingDir
     cp -R HelloWorld.iOS.app.dSYM $stagingDir
    displayName: Stage Artifacts
    workingDirectory: 'e2e/Forms/src/HelloWorld.iOS/bin/iPhone/${{ parameters.buildConfiguration }}'
    env:
      stagingDir: $(Build.ArtifactStagingDirectory)

  - bash: rm -rf NuGet
    displayName: Cleanup ArtifactStagingDirectory
    workingDirectory: $(Build.ArtifactStagingDirectory)

  - task: PublishPipelineArtifact@1
    displayName: 'Publish E2E Artifacts'
    inputs:
      targetPath: '$(Build.ArtifactStagingDirectory)'
      artifactName: E2E-iOS
